@using DevExpress.Web.ASPxTreeList

@Html.DevExpress().TreeList(settings => {
    settings.Name = "treeList";
    settings.CallbackRouteValues = new { Controller = "Home", Action = "TreeListPartial" };
    settings.Width = Unit.Pixel(800);

    settings.AutoGenerateColumns = false;
    settings.KeyFieldName = "ID";
    settings.ParentFieldName = "ParentID";
    settings.SettingsBehavior.AllowFocusedNode = true;
    settings.ClientSideEvents.ContextMenu = "OnContextMenu";

    settings.Columns.Add("Name", "Department");
    settings.Columns.Add(
        column => {
            column.FieldName = "Budget";
            column.PropertiesEdit.DisplayFormatString = "{0:C}";
        }
    );
    settings.Columns.Add("Location");
    settings.Columns.Add("Phone1", "Phone");

    settings.BeforeGetCallbackResult = (sender, e) => {
        if (ViewData["Expand"] == null)
            return;

        ASPxTreeList treeList = sender as ASPxTreeList;
        var currentNodeLevel = treeList.FocusedNode.Level;
        TreeListNodeIterator iterator = new TreeListNodeIterator(treeList.FocusedNode);
        while (iterator.Current != null) {
            TreeListNode node = iterator.Current;
            if (node.Level >= currentNodeLevel)
                node.Expanded = true;
            iterator.GetNext();
        }
    };
}
).Bind(Model).GetHtml()
